<% layout('layouts/index') %>

<main>
  <div class="bg-white border rounded-4 shadow-sm">
    <div class="p-3 border-bottom d-flex justify-content-between align-items-center">
      <h4 class="mb-0">Thêm câu hỏi mới</h4>
    </div>

    <form id="form-them-cau-hoi" class="p-4">
      <div class="row g-3">
        <div class="col-md-6">
          <label class="form-label">Bộ đề</label>
          <div id="ten-bo-de" class="form-control" style="background-color: #e9ecef; cursor: default;" tabindex="-1">Đang tải...</div>
          <input type="hidden" name="test_set_id" id="input-test-set-id" required>
        </div>

        <input type="hidden" name="part_number" value="1" />

        <div class="col-md-3">
          <label class="form-label">Câu số</label>
          <div id="hien-thi-so-cau" class="form-control" style="background-color: #e9ecef; cursor: default;" tabindex="-1">Đang tải...</div>
          <input type="hidden" name="question_number" id="input-so-cau-thuc" required>
        </div>

        <div class="col-md-3">
          <label class="form-label">Đáp án đúng</label>
          <select class="form-select" name="correct_answer" required>
            <option value="">-- Chọn đáp án --</option>
            <option value="A">A</option>
            <option value="B">B</option>
            <option value="C">C</option>
            <option value="D">D</option>
          </select>
        </div>

        <div class="col-12">
          <label class="form-label">Nội dung câu hỏi</label>
          <textarea class="form-control" name="question_text" rows="3" placeholder="Nhập nội dung câu hỏi..." required></textarea>
        </div>

        <div class="col-md-6">
          <label class="form-label">Đường dẫn Audio (nếu có)</label>
          <input type="text" class="form-control" name="audio_url" placeholder="Nhập URL audio">
        </div>
        <div class="col-md-6">
          <label class="form-label">Đường dẫn hình ảnh (nếu có)</label>
          <input type="text" class="form-control" name="image_url" placeholder="Nhập URL hình ảnh">
        </div>

        <div class="col-md-6">
          <label class="form-label">Các đáp án</label>
          <div class="input-group mb-2">
            <span class="input-group-text">A</span>
            <input type="text" class="form-control" name="option_0" placeholder="Đáp án A" required>
          </div>
          <div class="input-group">
            <span class="input-group-text">C</span>
            <input type="text" class="form-control" name="option_2" placeholder="Đáp án C" required>
          </div>
        </div>
        <div class="col-md-6">
          <label class="form-label" style="visibility: hidden;">Đáp án</label>
          <div class="input-group mb-2">
            <span class="input-group-text">B</span>
            <input type="text" class="form-control" name="option_1" placeholder="Đáp án B" required>
          </div>
          <div class="input-group">
            <span class="input-group-text">D</span>
            <input type="text" class="form-control" name="option_3" placeholder="Đáp án D" required>
          </div>
        </div>

        <div class="col-12">
          <label class="form-label">Giải thích (nếu có)</label>
          <textarea class="form-control" name="explanation" rows="2" placeholder="Nhập giải thích"></textarea>
        </div>

        <div class="col-12 d-flex justify-content-end gap-2 mt-3">
          <button type="submit" class="btn btn-success">Lưu lại</button>
          <button type="button" class="btn btn-outline-primary" id="btn-quay-lai">Quay lại</button>
        </div>
      </div>
    </form>
  </div>
</main>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('form-them-cau-hoi');
    const tenBoDeDiv = document.getElementById('ten-bo-de');
    const inputTestSetId = document.getElementById('input-test-set-id');
    const inputSoCauThuc = document.getElementById('input-so-cau-thuc');
    const hienThiSoCau = document.getElementById('hien-thi-so-cau');
    const btnQuayLai = document.getElementById('btn-quay-lai');

    const params = new URLSearchParams(window.location.search);
    const testSetIdFromUrl = params.get('id');
    let totalQuestions = 0;

    async function layBoDe() {
      if (!testSetIdFromUrl) {
        alert('Không có bộ đề được chọn.');
        window.location.href = '/detail-exam';
        return;
      }

      try {
        const res = await fetch('http://localhost:8000/api/tests/test-set/get-all', {
          method: 'GET',
          credentials: 'include'
        });

        const dsBoDe = await res.json();
        const boDe = dsBoDe.find(bd => String(bd.test_set_id) === testSetIdFromUrl);

        if (!boDe) {
          alert('Bộ đề không tồn tại.');
          window.location.href = '/detail-exam';
          return;
        }

        tenBoDeDiv.innerText = boDe.name || 'Không có tên bộ đề';
        inputTestSetId.value = boDe.test_set_id;
        totalQuestions = Number(boDe.total_questions) || 0;

        if (totalQuestions <= 0) {
          alert('Bộ đề không có tổng số câu hợp lệ.');
          window.location.href = '/detail-exam';
          return;
        }

        await layCauHoiVaGanSoCau(testSetIdFromUrl);
      } catch (error) {
        console.error('Lỗi khi tải bộ đề:', error);
        alert('Có lỗi khi tải bộ đề.');
        window.location.href = '/detail-exam';
      }
    }

    async function layCauHoiVaGanSoCau(test_set_id) {
      try {
        const res = await fetch('http://localhost:8000/api/tests/question-test/get-all', {
          method: 'GET',
          credentials: 'include'
        });

        const dsCauHoi = await res.json();
        const cauHoiTrongBoDe = dsCauHoi.filter(q => q.test_set_id === Number(test_set_id));
        const soCauDaDung = cauHoiTrongBoDe.map(q => Number(q.question_number)).filter(n => !isNaN(n));

        let soCanGan = null;
        for (let i = 1; i <= totalQuestions; i++) {
          if (!soCauDaDung.includes(i)) {
            soCanGan = i;
            break;
          }
        }

        if (soCanGan !== null) {
          inputSoCauThuc.value = soCanGan;
          hienThiSoCau.innerText = soCanGan; // Chỉ hiện số câu thôi, bỏ phần x/y
        } else {
          inputSoCauThuc.value = '';
          hienThiSoCau.innerText = 'Đã đủ số câu';
        }

      } catch (err) {
        console.error('Lỗi khi lấy câu hỏi:', err);
        alert('Không thể tự động gán số câu.');
      }
    }

    btnQuayLai.addEventListener('click', () => {
      window.location.href = '/detail-exam';
    });

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(form);
      const test_set_id_raw = formData.get('test_set_id');
      const test_set_id = Number(test_set_id_raw);

      const question_number = Number(formData.get('question_number'));
      if (!test_set_id || isNaN(question_number)) {
        alert('Thiếu thông tin bộ đề hoặc số câu.');
        return;
      }

      const correct_answer = formData.get('correct_answer');
      const question_text = formData.get('question_text').trim();
      const audio_url = formData.get('audio_url').trim();
      const image_url = formData.get('image_url').trim();
      const explanation = formData.get('explanation').trim();

      const options = [
        formData.get('option_0')?.trim() || '',
        formData.get('option_1')?.trim() || '',
        formData.get('option_2')?.trim() || '',
        formData.get('option_3')?.trim() || '',
      ];

      if (!correct_answer || !['A','B','C','D'].includes(correct_answer)) {
        alert('Vui lòng chọn đáp án đúng.');
        return;
      }

      if (!question_text) {
        alert('Vui lòng nhập nội dung câu hỏi.');
        return;
      }

      if (options.some(opt => !opt)) {
        alert('Vui lòng nhập đầy đủ 4 đáp án.');
        return;
      }

      try {
        const dataGui = {
          test_set_id,
          part_number: 1,
          question_number,
          question_text,
          correct_answer,
          audio_url: audio_url || null,
          image_url: image_url || null,
          options,
          explanation: explanation || null,
        };

        const res = await fetch('http://localhost:8000/api/tests/question-test/create', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          credentials: 'include',
          body: JSON.stringify(dataGui)
        });

        if (!res.ok) {
          const errData = await res.json();
          alert('Lỗi khi tạo câu hỏi: ' + (errData.message || 'Lỗi không xác định.'));
          return;
        }

        alert('Thêm câu hỏi thành công!');
        window.location.href = `/detail-exam?id=${test_set_id}`;
      } catch (err) {
        console.error(err);
        alert('Lỗi khi gửi dữ liệu.');
      }
    });

    layBoDe();
  });
</script>
