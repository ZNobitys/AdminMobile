<% layout('layouts/index') %>

<main>
  <div class="bg-white border rounded-4 shadow-sm">
    <div class="p-3 border-bottom d-flex justify-content-between align-items-center">
      <h4 class="mb-0">Thêm câu hỏi mới</h4>
    </div>

    <form id="form-them-cau-hoi" class="p-4">
      <div class="row g-3">

        <!-- Hiển thị tên bộ đề không thể chỉnh sửa -->
        <div class="col-md-6">
          <label class="form-label">Bộ đề</label>
          <div id="ten-bo-de" class="form-control" style="background-color: #e9ecef; cursor: default;" tabindex="-1"></div>
          <input type="hidden" name="test_set_id" id="input-test-set-id" required>
        </div>

        <!-- Part ẩn đi, giá trị luôn 1 -->
        <input type="hidden" name="part_number" value="1" />

        <!-- Số câu -->
        <div class="col-md-3">
          <label class="form-label">Số câu</label>
          <input type="number" class="form-control" name="question_number" id="input-so-cau" min="1" required>
          <div id="so-cau-error" class="form-text text-danger d-none">Số câu phải nhỏ hơn hoặc bằng tổng câu hỏi của bộ đề.</div>
        </div>

        <!-- Đáp án đúng -->
        <div class="col-md-3">
          <label class="form-label">Đáp án đúng</label>
          <select class="form-select" name="correct_answer" required>
            <option value="">-- Chọn đáp án --</option>
            <option value="A">A</option>
            <option value="B">B</option>
            <option value="C">C</option>
            <option value="D">D</option>
          </select>
        </div>

        <!-- Nội dung câu hỏi -->
        <div class="col-12">
          <label class="form-label">Nội dung câu hỏi</label>
          <textarea class="form-control" name="question_text" rows="3" placeholder="Nhập nội dung câu hỏi..." required></textarea>
        </div>

        <!-- Audio và hình ảnh -->
        <div class="col-md-6">
          <label class="form-label">Đường dẫn Audio (nếu có)</label>
          <input type="text" class="form-control" name="audio_url" placeholder="Nhập URL audio">
        </div>
        <div class="col-md-6">
          <label class="form-label">Đường dẫn hình ảnh (nếu có)</label>
          <input type="text" class="form-control" name="image_url" placeholder="Nhập URL hình ảnh">
        </div>

        <!-- Đáp án -->
        <div class="col-md-6">
          <label class="form-label">Các đáp án</label>
          <div class="input-group mb-2">
            <span class="input-group-text">A</span>
            <input type="text" class="form-control" name="option_0" placeholder="Đáp án A" required>
          </div>
          <div class="input-group">
            <span class="input-group-text">C</span>
            <input type="text" class="form-control" name="option_2" placeholder="Đáp án C" required>
          </div>
        </div>
        <div class="col-md-6">
          <label class="form-label" style="visibility: hidden;">Đáp án</label>
          <div class="input-group mb-2">
            <span class="input-group-text">B</span>
            <input type="text" class="form-control" name="option_1" placeholder="Đáp án B" required>
          </div>
          <div class="input-group">
            <span class="input-group-text">D</span>
            <input type="text" class="form-control" name="option_3" placeholder="Đáp án D" required>
          </div>
        </div>

        <!-- Giải thích -->
        <div class="col-12">
          <label class="form-label">Giải thích (nếu có)</label>
          <textarea class="form-control" name="explanation" rows="2" placeholder="Nhập giải thích"></textarea>
        </div>

        <!-- Nút -->
        <div class="col-12 d-flex justify-content-end gap-2 mt-3">
          <button type="submit" class="btn btn-success">Lưu lại</button>
          <button type="button" class="btn btn-outline-primary" id="btn-quay-lai">Quay lại</button>
        </div>
      </div>
    </form>
  </div>
</main>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('form-them-cau-hoi');
    const tenBoDeDiv = document.getElementById('ten-bo-de');
    const inputTestSetId = document.getElementById('input-test-set-id');
    const inputSoCau = document.getElementById('input-so-cau');
    const soCauError = document.getElementById('so-cau-error');
    const btnQuayLai = document.getElementById('btn-quay-lai');

    // Lấy test_set_id từ URL ?id=...
    const params = new URLSearchParams(window.location.search);
    const testSetIdFromUrl = params.get('id');

    let totalQuestions = 0;

    async function layBoDe() {
      if (!testSetIdFromUrl) {
        alert('Không có bộ đề được chọn. Vui lòng chọn bộ đề trước khi thêm câu hỏi.');
        window.location.href = '/detail-exam';
        return;
      }
      try {
        const res = await fetch('http://localhost:8000/api/tests/test-set/get-all', {
          method: 'GET',
          credentials: 'include'
        });

        if (!res.ok) throw new Error('Không thể tải danh sách bộ đề.');

        const dsBoDe = await res.json();
        const boDe = dsBoDe.find(bd => String(bd.test_set_id) === testSetIdFromUrl);
        if (!boDe) {
          alert('Bộ đề không tồn tại hoặc đã bị xoá.');
          window.location.href = '/detail-exam';
          return;
        }

        // Hiển thị tên bộ đề
        tenBoDeDiv.innerText = boDe.name || 'Không có tên bộ đề';
        inputTestSetId.value = boDe.test_set_id;

        // Lấy tổng số câu tối đa của bộ đề
        totalQuestions = Number(boDe.total_questions) || 0;
        if (totalQuestions <= 0) {
          alert('Bộ đề không có tổng số câu hợp lệ.');
          window.location.href = '/detail-exam';
          return;
        }

        // Đặt max và placeholder cho input số câu
        inputSoCau.max = totalQuestions;
        inputSoCau.placeholder = `Tối đa ${totalQuestions} câu`;

      } catch (error) {
        console.error('Lỗi khi tải bộ đề:', error);
        alert('Có lỗi khi tải bộ đề. Vui lòng thử lại.');
        window.location.href = '/detail-exam';
      }
    }

    btnQuayLai.addEventListener('click', () => {
      window.location.href = '/detail-exam';
    });

    // Kiểm tra số câu nhập vào không vượt quá total_questions
    inputSoCau.addEventListener('input', () => {
      const val = Number(inputSoCau.value);
      if (val > totalQuestions) {
        soCauError.classList.remove('d-none');
      } else {
        soCauError.classList.add('d-none');
      }
    });

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(form);
      const test_set_id_raw = formData.get('test_set_id');
      const test_set_id = Number(test_set_id_raw);

      if (!test_set_id_raw || isNaN(test_set_id)) {
        alert('Không tìm thấy bộ đề hợp lệ.');
        return;
      }

      const part_number = 1; // luôn bằng 1 theo yêu cầu
      const question_number = Number(formData.get('question_number'));

      if (isNaN(question_number) || question_number < 1 || question_number > totalQuestions) {
        alert(`Số câu phải là số nguyên dương và nhỏ hơn hoặc bằng tổng số câu của bộ đề (${totalQuestions}).`);
        return;
      }

      const correct_answer = formData.get('correct_answer');
      const question_text = formData.get('question_text').trim();
      const audio_url = formData.get('audio_url').trim();
      const image_url = formData.get('image_url').trim();
      const explanation = formData.get('explanation').trim();

      const options = [
        formData.get('option_0')?.trim() || '',
        formData.get('option_1')?.trim() || '',
        formData.get('option_2')?.trim() || '',
        formData.get('option_3')?.trim() || '',
      ];

      // Kiểm tra dữ liệu bắt buộc
      if (!correct_answer || !['A','B','C','D'].includes(correct_answer)) {
        alert('Vui lòng chọn đáp án đúng.');
        return;
      }

      if (!question_text) {
        alert('Vui lòng nhập nội dung câu hỏi.');
        return;
      }

      if (options.some(opt => !opt)) {
        alert('Vui lòng nhập đủ các đáp án A, B, C, D.');
        return;
      }

      // Gửi lên API
      try {
        const dataGui = {
          test_set_id,
          part_number,
          question_number,
          question_text,
          correct_answer,
          audio_url: audio_url || null,
          image_url: image_url || null,
          options,
          explanation: explanation || null,
        };

        const res = await fetch('http://localhost:8000/api/tests/question-test/create', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          credentials: 'include',
          body: JSON.stringify(dataGui)
        });

        if (!res.ok) {
          const errData = await res.json();
          alert('Lỗi khi tạo câu hỏi: ' + (errData.message || 'Không xác định'));
          return;
        }

        alert('Thêm câu hỏi thành công!');
        window.location.href = `/list-question?id=${test_set_id}`;
      } catch (err) {
        alert('Lỗi mạng hoặc máy chủ. Vui lòng thử lại.');
        console.error(err);
      }
    });

    // Load bộ đề khi mở trang
    layBoDe();
  });
</script>
