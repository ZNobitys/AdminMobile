<% layout('layouts/index') %>
<main>
  <div class="bg-white border rounded-4 shadow-sm">
    <div class="p-3 border-bottom d-flex justify-content-between align-items-center">
      <h4>Quản lý Skill</h4>
      <!-- Đã xóa nút Thêm mới -->
    </div>

    <section class="p-3">
      <div class="table-responsive">
        <table class="table table-striped table-hover align-middle small">
          <thead class="table-light">
            <tr>
              <th style="width: 5%;">STT</th>
              <th style="width: 10%;">Tên skill</th>
              <th style="width: 10%;">Slug</th>
              <th style="width: 50%;">Mô tả</th>
              <th style="width: 7.5%;">Sửa</th>
              <th style="width: 7.5%;">Xóa</th>
            </tr>
          </thead>
          <tbody id="skillTableBody"></tbody>
        </table>
      </div>
    </section>
  </div>
</main>

<!-- Modal Sửa -->
<div class="modal fade" id="editSkillModal" tabindex="-1" aria-labelledby="editSkillModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <form id="editSkillForm" class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="editSkillModalLabel">Sửa skill</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" id="editSkillId" />
        <div class="mb-3">
          <label for="editSkillName" class="form-label">Tên skill</label>
          <input type="text" class="form-control" id="editSkillName" required />
        </div>
        <div class="mb-3">
          <label for="editSkillSlug" class="form-label">Slug</label>
          <input type="text" class="form-control" id="editSkillSlug" required />
        </div>
        <div class="mb-3">
          <label for="editSkillDescription" class="form-label">Mô tả</label>
          <textarea class="form-control" id="editSkillDescription" rows="3" required></textarea>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Lưu</button>
      </div>
    </form>
  </div>
</div>

<script>
  const apiBase = 'http://localhost:8000/api/skills';
  let skills = [];

  document.addEventListener('DOMContentLoaded', () => {
    fetchSkills();

    // Đã xoá sự kiện show modal thêm
    // Đã xoá sự kiện submit form thêm

    document.getElementById('editSkillForm').addEventListener('submit', e => {
      e.preventDefault();
      updateSkill();
    });
  });

  function fetchSkills() {
    fetch(`${apiBase}/get-all-skill`, { credentials: "include" })
      .then(async res => {
        if (res.status === 401) {
          alert("Phiên đăng nhập đã hết hạn hoặc token không hợp lệ.");
          window.location.href = "/";
          throw new Error("Unauthorized");
        }
        if (!res.ok) {
          const text = await res.text();
          throw new Error("Lỗi tải danh sách: " + res.status + " - " + text);
        }
        return res.json();
      })
      .then(data => {
        skills = data.skills || data;
        renderTable();
      })
      .catch(err => {
        console.error(err);
        alert('Lỗi tải danh sách skill: ' + err.message);
      });
  }

  function renderTable() {
    const tbody = document.getElementById('skillTableBody');
    tbody.innerHTML = '';
    skills.forEach((skill, index) => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${index + 1}</td>
        <td>${skill.name}</td>
        <td>${skill.slug}</td>
        <td>${skill.description}</td>
        <td><button class="btn btn-primary btn-sm" onclick="showEditModal(${skill.skill_id})">Sửa</button></td>
        <td><button class="btn btn-danger btn-sm" onclick="deleteSkill(${skill.skill_id})">Xóa</button></td>
      `;
      tbody.appendChild(tr);
    });
  }

  function showEditModal(id) {
    const skill = skills.find(s => s.skill_id === id);
    if (!skill) return;

    document.getElementById('editSkillId').value = skill.skill_id;
    document.getElementById('editSkillName').value = skill.name;
    document.getElementById('editSkillSlug').value = skill.slug;
    document.getElementById('editSkillDescription').value = skill.description;

    new bootstrap.Modal(document.getElementById('editSkillModal')).show();
  }

  function updateSkill() {
    const skill_id = document.getElementById('editSkillId').value;
    const name = document.getElementById('editSkillName').value.trim();
    const slug = document.getElementById('editSkillSlug').value.trim();
    const description = document.getElementById('editSkillDescription').value.trim();

    fetch(`${apiBase}/update-skill/${skill_id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      credentials: "include",
      body: JSON.stringify({ name, slug, description })
    })
    .then(async res => {
      if (res.status === 401) {
        alert("Phiên đăng nhập đã hết hạn hoặc token không hợp lệ.");
        window.location.href = "/";
        throw new Error("Unauthorized");
      }
      if (!res.ok) {
        const text = await res.text();
        throw new Error("Lỗi cập nhật: " + res.status + " - " + text);
      }
      return res.json();
    })
    .then(() => {
      alert("Cập nhật skill thành công!");
      bootstrap.Modal.getInstance(document.getElementById('editSkillModal')).hide();
      fetchSkills();
    })
    .catch(err => {
      console.error(err);
      alert("Cập nhật skill thất bại: " + err.message);
    });
  }

  function deleteSkill(id) {
    if (!confirm('Bạn có chắc chắn muốn xóa skill này?')) return;

    fetch(`${apiBase}/delete-skill/${id}`, {
      method: 'DELETE',
      credentials: "include"
    })
    .then(async res => {
      if (res.status === 401) {
        alert("Phiên đăng nhập đã hết hạn hoặc token không hợp lệ.");
        window.location.href = "/";
        throw new Error("Unauthorized");
      }
      if (!res.ok) {
        const text = await res.text();
        throw new Error("Lỗi xóa: " + res.status + " - " + text);
      }
      return res.json();
    })
    .then(() => {
      alert("Xóa skill thành công!");
      fetchSkills();
    })
    .catch(err => {
      console.error(err);
      alert("Xóa skill thất bại: " + err.message);
    });
  }
</script>
